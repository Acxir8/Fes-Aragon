// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "02/22/2024 19:49:23"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module semaforo (
	clk,
	semaforoRojo,
	semaforoAmarillo,
	semaforoVerde);
input 	clk;
output 	semaforoRojo;
output 	semaforoAmarillo;
output 	semaforoVerde;

// Design Ports Information
// semaforoRojo	=>  Location: PIN_38,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// semaforoAmarillo	=>  Location: PIN_37,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// semaforoVerde	=>  Location: PIN_36,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// clk	=>  Location: PIN_14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \c[0]~5 ;
wire \c[0]~5COUT1_18 ;
wire \c[1]~7 ;
wire \c[1]~7COUT1_20 ;
wire \c[2]~1 ;
wire \c[2]~1COUT1_22 ;
wire \c[3]~11 ;
wire \c[4]~3 ;
wire \c[4]~3COUT1_24 ;
wire \LessThan0~0_combout ;
wire \LessThan0~1_combout ;
wire \LessThan2~0_combout ;
wire \LessThan2~1_combout ;
wire \always1~0_combout ;
wire \always1~1_combout ;
wire \semaforoRojo~reg0_regout ;
wire \semaforoAmarillo~reg0_regout ;
wire \semaforoVerde~reg0_regout ;
wire [5:0] c;


// Location: PIN_14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X3_Y2_N1
maxii_lcell \c[0] (
// Equation(s):
// c[0] = DFFEAS(((!c[0])), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~1_combout , )
// \c[0]~5  = CARRY(((c[0])))
// \c[0]~5COUT1_18  = CARRY(((c[0])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(c[0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(c[0]),
	.cout(),
	.cout0(\c[0]~5 ),
	.cout1(\c[0]~5COUT1_18 ));
// synopsys translate_off
defparam \c[0] .lut_mask = "33cc";
defparam \c[0] .operation_mode = "arithmetic";
defparam \c[0] .output_mode = "reg_only";
defparam \c[0] .register_cascade_mode = "off";
defparam \c[0] .sum_lutc_input = "datac";
defparam \c[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N2
maxii_lcell \c[1] (
// Equation(s):
// c[1] = DFFEAS((c[1] $ ((\c[0]~5 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~1_combout , )
// \c[1]~7  = CARRY(((!\c[0]~5 ) # (!c[1])))
// \c[1]~7COUT1_20  = CARRY(((!\c[0]~5COUT1_18 ) # (!c[1])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(c[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\c[0]~5 ),
	.cin1(\c[0]~5COUT1_18 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(c[1]),
	.cout(),
	.cout0(\c[1]~7 ),
	.cout1(\c[1]~7COUT1_20 ));
// synopsys translate_off
defparam \c[1] .cin0_used = "true";
defparam \c[1] .cin1_used = "true";
defparam \c[1] .lut_mask = "3c3f";
defparam \c[1] .operation_mode = "arithmetic";
defparam \c[1] .output_mode = "reg_only";
defparam \c[1] .register_cascade_mode = "off";
defparam \c[1] .sum_lutc_input = "cin";
defparam \c[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N3
maxii_lcell \c[2] (
// Equation(s):
// c[2] = DFFEAS(c[2] $ ((((!\c[1]~7 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~1_combout , )
// \c[2]~1  = CARRY((c[2] & ((!\c[1]~7 ))))
// \c[2]~1COUT1_22  = CARRY((c[2] & ((!\c[1]~7COUT1_20 ))))

	.clk(\clk~combout ),
	.dataa(c[2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\c[1]~7 ),
	.cin1(\c[1]~7COUT1_20 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(c[2]),
	.cout(),
	.cout0(\c[2]~1 ),
	.cout1(\c[2]~1COUT1_22 ));
// synopsys translate_off
defparam \c[2] .cin0_used = "true";
defparam \c[2] .cin1_used = "true";
defparam \c[2] .lut_mask = "a50a";
defparam \c[2] .operation_mode = "arithmetic";
defparam \c[2] .output_mode = "reg_only";
defparam \c[2] .register_cascade_mode = "off";
defparam \c[2] .sum_lutc_input = "cin";
defparam \c[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N4
maxii_lcell \c[3] (
// Equation(s):
// c[3] = DFFEAS((c[3] $ ((\c[2]~1 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~1_combout , )
// \c[3]~11  = CARRY(((!\c[2]~1COUT1_22 ) # (!c[3])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(c[3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\c[2]~1 ),
	.cin1(\c[2]~1COUT1_22 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(c[3]),
	.cout(\c[3]~11 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c[3] .cin0_used = "true";
defparam \c[3] .cin1_used = "true";
defparam \c[3] .lut_mask = "3c3f";
defparam \c[3] .operation_mode = "arithmetic";
defparam \c[3] .output_mode = "reg_only";
defparam \c[3] .register_cascade_mode = "off";
defparam \c[3] .sum_lutc_input = "cin";
defparam \c[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N5
maxii_lcell \c[4] (
// Equation(s):
// c[4] = DFFEAS(c[4] $ ((((!\c[3]~11 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~1_combout , )
// \c[4]~3  = CARRY((c[4] & ((!\c[3]~11 ))))
// \c[4]~3COUT1_24  = CARRY((c[4] & ((!\c[3]~11 ))))

	.clk(\clk~combout ),
	.dataa(c[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\c[3]~11 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(c[4]),
	.cout(),
	.cout0(\c[4]~3 ),
	.cout1(\c[4]~3COUT1_24 ));
// synopsys translate_off
defparam \c[4] .cin_used = "true";
defparam \c[4] .lut_mask = "a50a";
defparam \c[4] .operation_mode = "arithmetic";
defparam \c[4] .output_mode = "reg_only";
defparam \c[4] .register_cascade_mode = "off";
defparam \c[4] .sum_lutc_input = "cin";
defparam \c[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N6
maxii_lcell \c[5] (
// Equation(s):
// c[5] = DFFEAS(c[5] $ (((((!\c[3]~11  & \c[4]~3 ) # (\c[3]~11  & \c[4]~3COUT1_24 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~1_combout , )

	.clk(\clk~combout ),
	.dataa(c[5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\c[3]~11 ),
	.cin0(\c[4]~3 ),
	.cin1(\c[4]~3COUT1_24 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(c[5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \c[5] .cin0_used = "true";
defparam \c[5] .cin1_used = "true";
defparam \c[5] .cin_used = "true";
defparam \c[5] .lut_mask = "5a5a";
defparam \c[5] .operation_mode = "normal";
defparam \c[5] .output_mode = "reg_only";
defparam \c[5] .register_cascade_mode = "off";
defparam \c[5] .sum_lutc_input = "cin";
defparam \c[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N7
maxii_lcell \LessThan0~0 (
// Equation(s):
// \LessThan0~0_combout  = (((!c[3] & !c[2])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(c[3]),
	.datad(c[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~0 .lut_mask = "000f";
defparam \LessThan0~0 .operation_mode = "normal";
defparam \LessThan0~0 .output_mode = "comb_only";
defparam \LessThan0~0 .register_cascade_mode = "off";
defparam \LessThan0~0 .sum_lutc_input = "datac";
defparam \LessThan0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N8
maxii_lcell \LessThan0~1 (
// Equation(s):
// \LessThan0~1_combout  = (c[4] & (c[5] & ((c[1]) # (!\LessThan0~0_combout ))))

	.clk(gnd),
	.dataa(c[4]),
	.datab(c[1]),
	.datac(c[5]),
	.datad(\LessThan0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~1 .lut_mask = "80a0";
defparam \LessThan0~1 .operation_mode = "normal";
defparam \LessThan0~1 .output_mode = "comb_only";
defparam \LessThan0~1 .register_cascade_mode = "off";
defparam \LessThan0~1 .sum_lutc_input = "datac";
defparam \LessThan0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N0
maxii_lcell \LessThan2~0 (
// Equation(s):
// \LessThan2~0_combout  = (c[2] & (c[4] & ((c[1]) # (c[0]))))

	.clk(gnd),
	.dataa(c[2]),
	.datab(c[1]),
	.datac(c[4]),
	.datad(c[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~0 .lut_mask = "a080";
defparam \LessThan2~0 .operation_mode = "normal";
defparam \LessThan2~0 .output_mode = "comb_only";
defparam \LessThan2~0 .register_cascade_mode = "off";
defparam \LessThan2~0 .sum_lutc_input = "datac";
defparam \LessThan2~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N6
maxii_lcell \LessThan2~1 (
// Equation(s):
// \LessThan2~1_combout  = (c[5]) # ((\LessThan2~0_combout ) # ((c[4] & c[3])))

	.clk(gnd),
	.dataa(c[4]),
	.datab(c[3]),
	.datac(c[5]),
	.datad(\LessThan2~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~1 .lut_mask = "fff8";
defparam \LessThan2~1 .operation_mode = "normal";
defparam \LessThan2~1 .output_mode = "comb_only";
defparam \LessThan2~1 .register_cascade_mode = "off";
defparam \LessThan2~1 .sum_lutc_input = "datac";
defparam \LessThan2~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N9
maxii_lcell \always1~0 (
// Equation(s):
// \always1~0_combout  = (c[5] & (c[1] & (c[0] & c[2])))

	.clk(gnd),
	.dataa(c[5]),
	.datab(c[1]),
	.datac(c[0]),
	.datad(c[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~0 .lut_mask = "8000";
defparam \always1~0 .operation_mode = "normal";
defparam \always1~0 .output_mode = "comb_only";
defparam \always1~0 .register_cascade_mode = "off";
defparam \always1~0 .sum_lutc_input = "datac";
defparam \always1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N8
maxii_lcell \always1~1 (
// Equation(s):
// \always1~1_combout  = (\always1~0_combout ) # ((c[5] & ((c[4]) # (c[3]))))

	.clk(gnd),
	.dataa(c[4]),
	.datab(c[5]),
	.datac(\always1~0_combout ),
	.datad(c[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~1 .lut_mask = "fcf8";
defparam \always1~1 .operation_mode = "normal";
defparam \always1~1 .output_mode = "comb_only";
defparam \always1~1 .register_cascade_mode = "off";
defparam \always1~1 .sum_lutc_input = "datac";
defparam \always1~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N7
maxii_lcell \semaforoRojo~reg0 (
// Equation(s):
// \semaforoRojo~reg0_regout  = DFFEAS((((\LessThan2~1_combout  & \always1~1_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\LessThan2~1_combout ),
	.datad(\always1~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\semaforoRojo~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \semaforoRojo~reg0 .lut_mask = "f000";
defparam \semaforoRojo~reg0 .operation_mode = "normal";
defparam \semaforoRojo~reg0 .output_mode = "reg_only";
defparam \semaforoRojo~reg0 .register_cascade_mode = "off";
defparam \semaforoRojo~reg0 .sum_lutc_input = "datac";
defparam \semaforoRojo~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N9
maxii_lcell \semaforoAmarillo~reg0 (
// Equation(s):
// \semaforoAmarillo~reg0_regout  = DFFEAS((((\LessThan2~1_combout  & !\always1~1_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\LessThan2~1_combout ),
	.datad(\always1~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\semaforoAmarillo~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \semaforoAmarillo~reg0 .lut_mask = "00f0";
defparam \semaforoAmarillo~reg0 .operation_mode = "normal";
defparam \semaforoAmarillo~reg0 .output_mode = "reg_only";
defparam \semaforoAmarillo~reg0 .register_cascade_mode = "off";
defparam \semaforoAmarillo~reg0 .sum_lutc_input = "datac";
defparam \semaforoAmarillo~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N4
maxii_lcell \semaforoVerde~reg0 (
// Equation(s):
// \semaforoVerde~reg0_regout  = DFFEAS((((!\LessThan2~1_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\LessThan2~1_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\semaforoVerde~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \semaforoVerde~reg0 .lut_mask = "0f0f";
defparam \semaforoVerde~reg0 .operation_mode = "normal";
defparam \semaforoVerde~reg0 .output_mode = "reg_only";
defparam \semaforoVerde~reg0 .register_cascade_mode = "off";
defparam \semaforoVerde~reg0 .sum_lutc_input = "datac";
defparam \semaforoVerde~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_38,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \semaforoRojo~I (
	.datain(\semaforoRojo~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(semaforoRojo));
// synopsys translate_off
defparam \semaforoRojo~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_37,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \semaforoAmarillo~I (
	.datain(\semaforoAmarillo~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(semaforoAmarillo));
// synopsys translate_off
defparam \semaforoAmarillo~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_36,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \semaforoVerde~I (
	.datain(\semaforoVerde~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(semaforoVerde));
// synopsys translate_off
defparam \semaforoVerde~I .operation_mode = "output";
// synopsys translate_on

endmodule
