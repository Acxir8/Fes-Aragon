// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "09/25/2023 22:18:13"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module CarritoMueve (
	clk,
	rst,
	ENTRADA,
	av,
	re,
	vd,
	vi,
	al);
input 	clk;
input 	rst;
inout 	[0:3] ENTRADA;
output 	av;
output 	re;
output 	vd;
output 	vi;
output 	al;

// Design Ports Information
// clk	=>  Location: PIN_14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// rst	=>  Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// av	=>  Location: PIN_37,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// re	=>  Location: PIN_30,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// vd	=>  Location: PIN_38,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// vi	=>  Location: PIN_40,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// al	=>  Location: PIN_34,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// ENTRADA[3]	=>  Location: PIN_35,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// ENTRADA[2]	=>  Location: PIN_33,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// ENTRADA[1]	=>  Location: PIN_42,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// ENTRADA[0]	=>  Location: PIN_36,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \rst~combout ;
wire \ENTRADA[3]~reg0_regout ;
wire \ENTRADA[2]~reg0_regout ;
wire \ENTRADA[1]~reg0_regout ;
wire \ENTRADA[0]~reg0_regout ;
wire \Mux0~0_combout ;
wire \Mux1~0_combout ;
wire \Mux2~0_combout ;
wire \Mux3~0_combout ;
wire \Mux4~0_combout ;


// Location: PIN_14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \rst~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\rst~combout ),
	.padio(rst));
// synopsys translate_off
defparam \rst~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X4_Y1_N7
maxii_lcell \ENTRADA[3]~reg0 (
// Equation(s):
// \ENTRADA[3]~reg0_regout  = DFFEAS((((!\ENTRADA[3]~reg0_regout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\ENTRADA[3]~reg0_regout ),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ENTRADA[3]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ENTRADA[3]~reg0 .lut_mask = "0f0f";
defparam \ENTRADA[3]~reg0 .operation_mode = "normal";
defparam \ENTRADA[3]~reg0 .output_mode = "reg_only";
defparam \ENTRADA[3]~reg0 .register_cascade_mode = "off";
defparam \ENTRADA[3]~reg0 .sum_lutc_input = "datac";
defparam \ENTRADA[3]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N4
maxii_lcell \ENTRADA[2]~reg0 (
// Equation(s):
// \ENTRADA[2]~reg0_regout  = DFFEAS(((\ENTRADA[3]~reg0_regout  $ (\ENTRADA[2]~reg0_regout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\ENTRADA[3]~reg0_regout ),
	.datad(\ENTRADA[2]~reg0_regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ENTRADA[2]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ENTRADA[2]~reg0 .lut_mask = "0ff0";
defparam \ENTRADA[2]~reg0 .operation_mode = "normal";
defparam \ENTRADA[2]~reg0 .output_mode = "reg_only";
defparam \ENTRADA[2]~reg0 .register_cascade_mode = "off";
defparam \ENTRADA[2]~reg0 .sum_lutc_input = "datac";
defparam \ENTRADA[2]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N2
maxii_lcell \ENTRADA[1]~reg0 (
// Equation(s):
// \ENTRADA[1]~reg0_regout  = DFFEAS((\ENTRADA[1]~reg0_regout  $ (((\ENTRADA[3]~reg0_regout  & \ENTRADA[2]~reg0_regout )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\ENTRADA[1]~reg0_regout ),
	.datac(\ENTRADA[3]~reg0_regout ),
	.datad(\ENTRADA[2]~reg0_regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ENTRADA[1]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ENTRADA[1]~reg0 .lut_mask = "3ccc";
defparam \ENTRADA[1]~reg0 .operation_mode = "normal";
defparam \ENTRADA[1]~reg0 .output_mode = "reg_only";
defparam \ENTRADA[1]~reg0 .register_cascade_mode = "off";
defparam \ENTRADA[1]~reg0 .sum_lutc_input = "datac";
defparam \ENTRADA[1]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N0
maxii_lcell \ENTRADA[0]~reg0 (
// Equation(s):
// \ENTRADA[0]~reg0_regout  = DFFEAS(\ENTRADA[0]~reg0_regout  $ (((\ENTRADA[2]~reg0_regout  & (\ENTRADA[3]~reg0_regout  & \ENTRADA[1]~reg0_regout )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(\ENTRADA[2]~reg0_regout ),
	.datab(\ENTRADA[0]~reg0_regout ),
	.datac(\ENTRADA[3]~reg0_regout ),
	.datad(\ENTRADA[1]~reg0_regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ENTRADA[0]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ENTRADA[0]~reg0 .lut_mask = "6ccc";
defparam \ENTRADA[0]~reg0 .operation_mode = "normal";
defparam \ENTRADA[0]~reg0 .output_mode = "reg_only";
defparam \ENTRADA[0]~reg0 .register_cascade_mode = "off";
defparam \ENTRADA[0]~reg0 .sum_lutc_input = "datac";
defparam \ENTRADA[0]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N6
maxii_lcell \Mux0~0 (
// Equation(s):
// \Mux0~0_combout  = (\ENTRADA[3]~reg0_regout  & (((\ENTRADA[0]~reg0_regout  & \ENTRADA[1]~reg0_regout )))) # (!\ENTRADA[3]~reg0_regout  & ((\ENTRADA[2]~reg0_regout  & ((\ENTRADA[1]~reg0_regout ))) # (!\ENTRADA[2]~reg0_regout  & (\ENTRADA[0]~reg0_regout 
// ))))

	.clk(gnd),
	.dataa(\ENTRADA[3]~reg0_regout ),
	.datab(\ENTRADA[2]~reg0_regout ),
	.datac(\ENTRADA[0]~reg0_regout ),
	.datad(\ENTRADA[1]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux0~0 .lut_mask = "f410";
defparam \Mux0~0 .operation_mode = "normal";
defparam \Mux0~0 .output_mode = "comb_only";
defparam \Mux0~0 .register_cascade_mode = "off";
defparam \Mux0~0 .sum_lutc_input = "datac";
defparam \Mux0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N9
maxii_lcell \Mux1~0 (
// Equation(s):
// \Mux1~0_combout  = (!\ENTRADA[3]~reg0_regout  & ((\ENTRADA[2]~reg0_regout  & ((\ENTRADA[1]~reg0_regout ))) # (!\ENTRADA[2]~reg0_regout  & (\ENTRADA[0]~reg0_regout ))))

	.clk(gnd),
	.dataa(\ENTRADA[3]~reg0_regout ),
	.datab(\ENTRADA[2]~reg0_regout ),
	.datac(\ENTRADA[0]~reg0_regout ),
	.datad(\ENTRADA[1]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux1~0 .lut_mask = "5410";
defparam \Mux1~0 .operation_mode = "normal";
defparam \Mux1~0 .output_mode = "comb_only";
defparam \Mux1~0 .register_cascade_mode = "off";
defparam \Mux1~0 .sum_lutc_input = "datac";
defparam \Mux1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N5
maxii_lcell \Mux2~0 (
// Equation(s):
// \Mux2~0_combout  = (\ENTRADA[3]~reg0_regout  & (!\ENTRADA[1]~reg0_regout  & ((\ENTRADA[2]~reg0_regout ) # (\ENTRADA[0]~reg0_regout )))) # (!\ENTRADA[3]~reg0_regout  & ((\ENTRADA[2]~reg0_regout ) # ((\ENTRADA[0]~reg0_regout ))))

	.clk(gnd),
	.dataa(\ENTRADA[3]~reg0_regout ),
	.datab(\ENTRADA[2]~reg0_regout ),
	.datac(\ENTRADA[0]~reg0_regout ),
	.datad(\ENTRADA[1]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux2~0 .lut_mask = "54fc";
defparam \Mux2~0 .operation_mode = "normal";
defparam \Mux2~0 .output_mode = "comb_only";
defparam \Mux2~0 .register_cascade_mode = "off";
defparam \Mux2~0 .sum_lutc_input = "datac";
defparam \Mux2~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N8
maxii_lcell \Mux3~0 (
// Equation(s):
// \Mux3~0_combout  = (!\ENTRADA[2]~reg0_regout  & (\ENTRADA[1]~reg0_regout  & ((\ENTRADA[3]~reg0_regout ) # (!\ENTRADA[0]~reg0_regout ))))

	.clk(gnd),
	.dataa(\ENTRADA[3]~reg0_regout ),
	.datab(\ENTRADA[2]~reg0_regout ),
	.datac(\ENTRADA[0]~reg0_regout ),
	.datad(\ENTRADA[1]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux3~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux3~0 .lut_mask = "2300";
defparam \Mux3~0 .operation_mode = "normal";
defparam \Mux3~0 .output_mode = "comb_only";
defparam \Mux3~0 .register_cascade_mode = "off";
defparam \Mux3~0 .sum_lutc_input = "datac";
defparam \Mux3~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N3
maxii_lcell \Mux4~0 (
// Equation(s):
// \Mux4~0_combout  = ((\ENTRADA[2]~reg0_regout  & ((\ENTRADA[1]~reg0_regout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\ENTRADA[2]~reg0_regout ),
	.datac(vcc),
	.datad(\ENTRADA[1]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux4~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux4~0 .lut_mask = "cc00";
defparam \Mux4~0 .operation_mode = "normal";
defparam \Mux4~0 .output_mode = "comb_only";
defparam \Mux4~0 .register_cascade_mode = "off";
defparam \Mux4~0 .sum_lutc_input = "datac";
defparam \Mux4~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_37,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \av~I (
	.datain(!\Mux0~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(av));
// synopsys translate_off
defparam \av~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_30,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \re~I (
	.datain(\Mux1~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(re));
// synopsys translate_off
defparam \re~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_38,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \vd~I (
	.datain(\Mux2~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(vd));
// synopsys translate_off
defparam \vd~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_40,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \vi~I (
	.datain(\Mux3~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(vi));
// synopsys translate_off
defparam \vi~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_34,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \al~I (
	.datain(\Mux4~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(al));
// synopsys translate_off
defparam \al~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_35,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \ENTRADA[3]~I (
	.datain(\ENTRADA[3]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(ENTRADA[3]));
// synopsys translate_off
defparam \ENTRADA[3]~I .operation_mode = "bidir";
// synopsys translate_on

// Location: PIN_33,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \ENTRADA[2]~I (
	.datain(\ENTRADA[2]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(ENTRADA[2]));
// synopsys translate_off
defparam \ENTRADA[2]~I .operation_mode = "bidir";
// synopsys translate_on

// Location: PIN_42,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \ENTRADA[1]~I (
	.datain(\ENTRADA[1]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(ENTRADA[1]));
// synopsys translate_off
defparam \ENTRADA[1]~I .operation_mode = "bidir";
// synopsys translate_on

// Location: PIN_36,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \ENTRADA[0]~I (
	.datain(\ENTRADA[0]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(ENTRADA[0]));
// synopsys translate_off
defparam \ENTRADA[0]~I .operation_mode = "bidir";
// synopsys translate_on

endmodule
